#!/usr/bin/env sh

CHARGING_ICON="âš¡"     #  U+26A1 -  Thunderbolt
DISCHARGING_ICON="ðŸ”‹" # U+1F50B - Battery

print_help() {
    echo "usage: battstat [options] format"
    echo ""
    echo "options:"
    echo "    -h, --help                display help information"
    echo "    -c, --charging-icon       string to display when battery is charging"
    echo "    -d, --discharging-icon    string to display when battery is discharging"
    echo "    --percent-when-charged    only display percent when charged"
    echo ""
    echo "format:"
    echo "    {i}    display icon"
    echo "    {t}    display time remaining"
    echo "    {p}    display percent"
    echo ""
    echo "    Note: There must be a space between each format token."

}

get_darwin_vars() {
    BATTERY_DETAILS=$(pmset -g batt)

    # Exit if no battery exists.
    if [ -z "$(echo \"$BATTERY_DETAILS\" | grep InternalBattery)" ]; then
	echo "No battery found."
	exit 1
    fi
    
    CHARGED=$(echo "$BATTERY_DETAILS" | grep -w 'charged')
    CHARGING=$(echo "$BATTERY_DETAILS" | grep -w 'AC Power')
    DISCHARGING=$(echo "$BATTERY_DETAILS" | grep -w 'Battery Power')
    TIME=$(echo "$BATTERY_DETAILS" | grep 'InternalBattery' | awk '{print $5}' | grep '^[0-9]')
    PERCENT=$(echo "$BATTERY_DETAILS" | grep 'InternalBattery' | awk '{print $3}')
    PERCENT=${PERCENT%?} # Strips the last character (;)
}

get_linux_vars() {
    BATTERY_DETAILS=$(upower -i $(upower -e | grep 'BAT'))
    
    # Exit if no batery exists.
    if [ -z "$BATTERY_DETAILS" ]; then
	echo "No battery found."
	exit 1
    fi
    
    CHARGED=$(echo "$BATTERY_DETAILS" | grep 'state' | grep -w 'fully-charged')
    CHARGING=$(echo "$BATTERY_DETAILS" | grep 'state' | grep -w 'charging')
    DISCHARGING=$(echo "$BATTERY_DETAILS" | grep 'state' | grep -w 'discharging')
    PERCENT=$(echo "$BATTERY_DETAILS"| grep 'percentage' | awk '{print $2}')
    
    case $(echo "$BATTERY_DETAILS" | grep 'time' | awk '{print $5}') in
	"hours")
	    HOURS=$(echo "$BATTERY_DETAILS" | grep 'time' | awk '{print $4}' | cut -d . -f1)
	    MINUTES=$(echo "$BATTERY_DETAILS" | grep 'time' | awk '{print $4}' | cut -d . -f2)
	    MINUTES=$(echo .$MINUTES \* 60 | bc -l | cut -d. -f1)
	    ;;
	"minutes")
	    MINUTES=$(echo "$BATTERY_DETAILS" | grep 'time' | awk '{print $4}' | cut -d . -f1)
	    ;;
    esac

    # Diplay 0 in the hours spot when only minutes remain.
    if [ -z "$HOURS" ]; then
	HOURS="0"
    fi

    # Prefix 0 when minutes drop below 10.
    if [ $(printf "%s" $MINUTES | wc -c) -eq '1' ]; then
	MINUTES="0$MINUTES"
    fi
    
    TIME=$HOURS:$MINUTES
}

hide_percent_until_charged() {
    if [ -z "$CHARGED" ]; then
	PERCENT=""
    fi
}   

print_icon() {
    if [ ! -z "$CHARGING" ] || [ ! -z "$CHARGED" ]; then
	ICON=$CHARGING_ICON
    elif [ ! -z "$DISCHARGING" ]; then
	ICON=$DISCHARGING_ICON
    fi

    printf " %s " $ICON
}

print_time() {
    # Display "calc..." when calculating time remaining.
    if [ -z "$TIME" ] || [ $TIME = "0:00" ]; then
	TIME="calc..."
    fi

    # Hide time when fully charged.
    if [ ! -z "$CHARGED" ]; then
	TIME=""
    fi
    
    if [ ! -z "$TIME" ]; then
	printf " %s " $TIME
    fi

}

print_percent() {
    if [ ! -z "$PERCENT" ]; then
	printf " %s " $PERCENT
    fi
}

if [ $# -eq 0 ] || [ $1 = "-h" ] || [ $1 = "--help" ]; then
    print_help
    exit 0
fi

case $(uname) in
    "Darwin")
	get_darwin_vars
	;;
    "Linux")
	get_linux_vars
	;;
esac

while test $# -gt 0; do
    case "$1" in
	--percent-when-charged)
	    hide_percent_until_charged
	    shift
	    ;;
	-c|--charging-icon)
	    CHARGING_ICON="$2"
	    shift
	    shift
	    ;;
	-d|--discharging-icon)
	    DISCHARGING_ICON="$2"
	    shift
	    shift
	    ;;
	{i})
	    print_icon
	    shift
	    ;;
	{t})
	    print_time
	    shift
	    ;;
	{p})
	    print_percent
	    shift
	    ;;
	*)
	    print_help
	    break
	    ;;
    esac
done

printf "\n"
